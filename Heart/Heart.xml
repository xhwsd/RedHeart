<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/">
	<Include file="SeaHooks\SeaHooks.xml"/>

	<Script file="Strings_EN.lua"/>
	<Script file="Strings_FR.lua"/>
	<Script file="Strings_CN.lua"/>
	<Script file="Strings_DE.lua"/>
	<Script file="Heart.lua"/>
	<Script file="Heart_Gui.lua"/>
	<Script file="Heart_event.lua"/>
	<Script file="Heart_Hooks.lua"/>
	<Script file="Heart_Helper.lua"/>
	
	<Frame name="Heart" hidden="false">
		<Scripts>
			<OnEvent>
				Heart_OnEvent()
			</OnEvent>
			<OnLoad>
				Heart_OnLoad()
			</OnLoad>
			<OnUpdate>
				Heart_OnUpdate(arg1)
			</OnUpdate>
		</Scripts>
	</Frame>
        <Button name="Heart_GUIPanelButtonTemplate" virtual="true">
		<NormalText inherits="GameFontNormalSmall"/>
		<DisabledText inherits="GameFontDisableSmall"/>
		<HighlightText inherits="GameFontHighlightSmall"/>
		<NormalTexture inherits="UIPanelButtonUpTexture"/>
		<PushedTexture inherits="UIPanelButtonDownTexture"/>
		<DisabledTexture inherits="UIPanelButtonDisabledTexture"/>
		<HighlightTexture inherits="UIPanelButtonHighlightTexture"/>
	</Button>

	<Button name="Heart_ClassClickButtonTemplate" virtual="true" hidden="true" enableMouse="true" inherits="OptionsButtonTemplate">
                <Size>
                      <AbsDimension x="100" y="25" />
                </Size>
                <Scripts>
                         <OnShow>
                                 this:RegisterForClicks("LeftButtonUp", "RightButtonDown")
                         </OnShow>
                         <OnClick>
                                  Heart_ClassClick_OnClick(arg1)
                         </OnClick>
                </Scripts>
		<NormalTexture inherits="DialogButtonNormalTexture"/>
		<PushedTexture inherits="DialogButtonPushedTexture"/>
		<HighlightTexture inherits="DialogButtonHighlightTexture"/>
        </Button>
	<Frame name="Heart_GUIRaidCheckButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="90" y="14"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentName" inherits="GameFontNormalSmall" justifyH="LEFT">
					<Size>
						<AbsDimension x="76" y="8"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="14" y="1"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentCheckButton" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="22" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="-4" y="4"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						-- we (don't) want to heal this person
						local parentgroup = string.gsub(this:GetName(), "Slot%dCheckButton$", "")
						local group = getglobal(parentgroup):GetID()
						local parentslot = string.gsub(this:GetName(), "CheckButton$", "")
						local slot = getglobal(parentslot):GetID()
						Heart_Config["raid"][group][slot] = (this:GetChecked() or 0)
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
		</Frames>
	</Frame>
	<Frame name="Heart_GUIRaidGroupTemplate" virtual="true">
		<Size>
			<AbsDimension x="90" y="80"/>
		</Size>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture file="Interface\RaidFrame\UI-RaidFrame-GroupOutline">
					<Size>
						<AbsDimension x="90" y="80"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
					<TexCoords left="0" right="0.6640625" top="0" bottom="0.625"/>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentLabel">
				<Size>
					<AbsDimension x="84" y="14"/>
				</Size>
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="14"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						-- (un)check all buttons in this group
						local parent = string.gsub(this:GetName(), "Label$", "")
						local group = getglobal(parent):GetID()
						if (getglobal(parent .. "Slot1CheckButton"):GetChecked()) then
							-- uncheck all
							for slot = 1, 5 do
								Heart_Config["raid"][group][slot] = 0
							end
						else
							-- check all
							for slot = 1, 5 do
								Heart_Config["raid"][group][slot] = 1
							end
						end
						Heart_SetRaidChecked()
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
				<NormalFont inherits="GameFontNormalSmall"/>
				<HighlightFont inherits="GameFontHighlightSmall"/>
			</Button>
			<Button name="$parentSlot1" inherits="Heart_GUIRaidCheckButtonTemplate" id="1">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="3" y="-3"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="$parentSlot2" inherits="Heart_GUIRaidCheckButtonTemplate" id="2">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentSlot1" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="$parentSlot3" inherits="Heart_GUIRaidCheckButtonTemplate" id="3">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentSlot2" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="$parentSlot4" inherits="Heart_GUIRaidCheckButtonTemplate" id="4">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentSlot3" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
			<Button name="$parentSlot5" inherits="Heart_GUIRaidCheckButtonTemplate" id="5">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentSlot4" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="-1"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				getglobal(this:GetName() .. "Label"):SetText(GROUP .. " " .. this:GetID())
			</OnLoad>
		</Scripts>
	</Frame>
	<StatusBar name="Heart_GUIBarTemplate" virtual="true" hidden="true">
		<Size>
			<AbsDimension x="192" y="14"/>
		</Size>
		<Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background"/>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentText" inherits="GameFontDarkGraySmall" text="Heart heal bar">
					<Size>
						<AbsDimension x="192" y="10"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
					<Color r="1.0" g="1.0" b="1.0"/>
				</FontString>
			</Layer>
		
		</Layers>
		<Scripts>
			<OnLoad>
				this:SetFrameLevel(this:GetFrameLevel() - 1)
				this:SetBackdropColor(0.7, 0.7, 0.7, 0.3)
				this:SetMinMaxValues(666, 1337)
				this:SetValue(666)
				getglobal(this:GetName() .. "BarTexture"):SetVertexColor(0.0, 1.0, 0.0, 0.3)
			</OnLoad>
		</Scripts>
		<BarTexture name="$parentBarTexture" file="Interface\TargetingFrame\UI-StatusBar"/>
	</StatusBar>
	<Frame name="Heart_GUICheckButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="180" y="31"/>
		</Size>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentCheckButtonText" inherits="GameFontHighlightSmall" justifyH="CENTER" text="">
					<Size>
						<AbsDimension x="160" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT">
							<Offset>
								<AbsDimension x="0" y="1"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentCheckButton" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT"/>
				</Anchors>
				<Scripts>
					<OnClick>
						Heart_UpdateSettings();
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUICheckButtonTemplate2" virtual="true">
		<Size>
			<AbsDimension x="50" y="60"/>
		</Size>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentCheckButtonText" inherits="GameFontHighlightSmall" justifyH="CENTER" text="">
					<Size>
						<AbsDimension x="50" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="BOTTOM">
							<Offset>
								<AbsDimension x="0" y="1"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentCheckButton" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOP"/>
				</Anchors>
				<Scripts>
					<OnClick>
						Heart_UpdateSettings();
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUISpellSelectTemplate" virtual="true" movable="true">
		<Size>
			<AbsDimension x="36" y="36"/>
		</Size>
		<Frames>
			<Button name="$parentSpell">
				<Size>
					<AbsDimension x="32" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="4" y="-4"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BORDER">
						<Texture name="$parentTexture"/>
                                        </Layer>
                                        <Layer level="BACKGROUND">
                                        	<Texture name="$parentbackground" file="Interface\DialogFrame\UI-DialogBox-Background">
					                   <Size>
					                         <AbsDimension x="64" y="64"/>
                                                           </Size>
                                                           <Anchors>
                                                                    <Anchor point="TOPLEFT"/>
                                                                    <Anchor point="BOTTOMRIGHT"/>
                                                           </Anchors>
                                                </Texture>
                                        </Layer>
			                <Layer level="ARTWORK">
				               <FontString name="$parentText" inherits="GameFontNormalSmall" justifyH="LEFT" hidden="true">
					                   <Size>
					                         <AbsDimension x="76" y="8"/>
                                                           </Size>
				               </FontString>
			                </Layer>
				</Layers>
				<Scripts>
			        <OnEnter>
			                 Heart_ShowTooltip()
			        </OnEnter>
			        <OnLeave>
			                 GameTooltip:Hide()
			        </OnLeave>
			        <OnClick>
			                  local spelltext = getglobal((this:GetName()).."Text"):GetText()
			                  Heart_SpellSelect_OnClick(spelltext)
                                </OnClick>
				</Scripts>
                                <NormalTexture name="$parentNormalTexture" file="Interface\Buttons\UI-Quickslot2">
			                       <Size>
				               <AbsDimension x="64" y="64"/>
			                       </Size>
  			                       <Anchors>
  				               <Anchor point="CENTER">
					       <Offset>
					       <AbsDimension x="0" y="-1"/>
					       </Offset>
				               </Anchor>
			                       </Anchors>
		               </NormalTexture>
			</Button>
		</Frames>
	</Frame>
        <Frame name="Heart_SpellSelectPopUpFrame" movable="true" parent="UIParent" enableMouse="true" hidden="true" toplevel="true">
		<Size>
			<AbsDimension x="192" y="100"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11"/>
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentSpellText" inherits="GameFontNormal" justifyH="CENTER">
					<Size>
						<AbsDimension x="128" y="12"/>
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="-16"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Slider name="$parentPercentSlider" inherits="OptionsSliderTemplate">
				<Size>
					<AbsDimension x="150" y="15"/>
				</Size>
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="-36"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
					<OnValueChanged>
                                                Heart_SpellSelectPopUpFramePercentSliderHigh:SetText(floor(this:GetValue()).."%");
					</OnValueChanged>
					<OnShow>
						this:SetMinMaxValues(0, 100);
						this:SetValueStep(1);
						this:SetValue(50)
					</OnShow>
				</Scripts>
			</Slider>
			<Button name="$parentButtonOK" inherits="OptionsButtonTemplate" text="Heart_GUI_okay">
				<Size>
					<AbsDimension x="80" y="21"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="16" y="16"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						local text = Heart_SpellSelectPopUpFrameSpellText:GetText()
						local percent = floor(Heart_SpellSelectPopUpFramePercentSlider:GetValue())
						if (not text or text == "") then
							return
							Heart_SpellSelectPopUpFrame:Hide()
                                                end
						if (not Heart_Config["classes"]) then
							Heart_Config["classes"] = {}
						end
						if (not Heart_Config["classes"][Heart_current_class][percent]) then
							Heart_Config["classes"][Heart_current_class][percent] = {
                                                                ["Spell"] = text,
                                                                ["Rank"] = table.getn(Heart_Spells[text]),
                                                                ["Scale"] = 0
                                                        }
						else
                                                        if Heart_attachment_spells[text] then
                                                           Heart_Config["classes"][Heart_current_class][percent]["Attachment"] = text
                                                        else

                                                            Heart_Config["classes"][Heart_current_class][percent]={
                                                                ["Spell"] = text,
                                                                ["Rank"] = table.getn(Heart_Spells[text]),
                                                                ["Scale"] = 0
                                                            }
                                                        end
						end
                                                Heart_ClassDropDownMenuInitialize()
						Heart_ClassDropDownMenuUpdate(Heart_current_class)
                                                Heart_SpellSelectPopUpFrame:Hide()
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parentButtonCancel" inherits="OptionsButtonTemplate" text="Heart_GUI_cancel">
				<Size>
					<AbsDimension x="80" y="21"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-16" y="16"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Heart_SpellSelectPopUpFrameSpellText:SetText("")
						Heart_SpellSelectPopUpFrame:Hide()
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnMouseUp>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
			</OnMouseUp>
			<OnMouseDown>
				if (((not this.isLocked) or (this.isLocked == 0)) and (arg1 == "LeftButton")) then
					this:StartMoving()
					this.isMoving = true
				end
			</OnMouseDown>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIClassTemplate" virtual="true">
		<Size>
			<AbsDimension x="280" y="32"/>
		</Size>
                <Backdrop bgFile="interface\dialogframe\ui-dialogbox-background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
                 <BackgroundInsets>
                                   <AbsInset left="5" right="5" top="5" bottom="5" />
                 </BackgroundInsets>
                 <TileSize>
                           <AbsValue val="16" />
                 </TileSize>
                 <EdgeSize>
                           <AbsValue val="16" />
                 </EdgeSize>
                 </Backdrop>
		<Frames>
			<Button name="$parentSpell">
				<Size>
					<AbsDimension x="22" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT">
						<Offset>
							<AbsDimension x="8" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BORDER">
						<Texture name="$parentTexture"/>
						<FontString name="$parentText" inherits="GameFontHighlightSmall" justifyH="LEFT" text="">
							<Size>
								<AbsDimension x="75" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT" relativeTo="$parentTexture" relativePoint="RIGHT">
									<Offset>
										<AbsDimension x="2" y="-4"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
						<FontString name="$parentPercent" inherits="GameFontHighlightSmall" justifyH="CENTER" text="">
							<Size>
								<AbsDimension x="75" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT" relativeTo="$parentText" relativePoint="RIGHT">
									<Offset>
										<AbsDimension x="-10" y="6"/>
									</Offset>
								</Anchor>
							</Anchors>
						</FontString>
                                        </Layer>
				</Layers>
				<Scripts>
			                <OnClick>
			                         local parent = this:GetName()
			                         local percent = getglobal(parent .. "Percent"):GetText()
                                                 percent = string.gsub(percent, "%%", "")
					         percent = tonumber(percent)
			                         Heart_Config["classes"][Heart_current_class][percent] = nil
			                         Heart_ClassDropDownMenuInitialize()
					         Heart_ClassDropDownMenuUpdate(Heart_current_class)
			                </OnClick>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Button>
			<Button name="$parentSpellAttachment">
				<Size>
					<AbsDimension x="12" y="12"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentSpellTexture" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BORDER">
						<Texture name="$parentTexture"/>
                                        </Layer>
				</Layers>
				<Scripts>
			                <OnClick>
			                         local parent = this:GetParent():GetName()
			                         local percent = getglobal(parent .. "SpellPercent"):GetText()
                                                 percent = string.gsub(percent, "%%", "")
					         percent = tonumber(percent)
			                         Heart_Config["classes"][Heart_current_class][percent]["Attachment"] = nil
			                         Heart_ClassDropDownMenuInitialize()
					         Heart_ClassDropDownMenuUpdate(Heart_current_class)
			                </OnClick>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
				</Scripts>
			</Button>
			<Slider name="$parentRankSlider" inherits="OptionsSliderTemplate">
				<Size>
					<AbsDimension x="75" y="15"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentSpellPercent" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
					<OnValueChanged>
						local thisparent = string.gsub(this:GetName(), "RankSlider$", "");
                                                local percenttext = getglobal(thisparent .. "SpellPercent"):GetText();
						local thispercent = string.gsub(percenttext, "%%", "")
						thispercent = tonumber(thispercent)
						Heart_Config["classes"][Heart_current_class][thispercent]["Rank"] = this:GetValue()
                                                getglobal(this:GetName() .. "High"):SetText(Heart_Config["classes"][Heart_current_class][thispercent]["Rank"])
					        Heart_UpdateSettings()        
					</OnValueChanged>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText();
						getglobal(this:GetName() .. "Low"):SetText(Heart_GUI_rank);
						getglobal(this:GetName() .. "High"):SetText();
						this:SetValueStep(1);
					</OnLoad>
					<OnShow>
						local thisparent = string.gsub(this:GetName(), "RankSlider$", "");
                                                local percenttext = getglobal(thisparent .. "SpellPercent"):GetText();
                                                local spell = getglobal(thisparent .. "SpellText"):GetText();
						local thispercent = string.gsub(percenttext, "%%", "")
						thispercent = tonumber(thispercent)
						this:SetMinMaxValues(1, table.getn(Heart_Spells[spell]));
						this:SetValue(Heart_Config["classes"][Heart_current_class][thispercent]["Rank"]);
                                                getglobal(this:GetName() .. "High"):SetText(Heart_Config["classes"][Heart_current_class][thispercent]["Rank"]);
					</OnShow>
				</Scripts>
			</Slider>
			<CheckButton name="$parentScaleCheckBox" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="22" y="22"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentRankSlider" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="4" y="-4"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						local thisparent = string.gsub(this:GetName(), "ScaleCheckBox$", "");
						local percenttext = getglobal(thisparent .. "SpellPercent"):GetText()
						local thispercent = string.gsub(percenttext, "%%", "")
						thispercent = tonumber(thispercent)
						Heart_Config["classes"][Heart_current_class][thispercent]["Scale"] = this:GetChecked()
					        Heart_UpdateSettings()
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnShow>
						local thisparent = string.gsub(this:GetName(), "ScaleCheckBox$", "");
						local percenttext = getglobal(thisparent .. "SpellPercent"):GetText()
						local thispercent = string.gsub(percenttext, "%%", "")
						thispercent = tonumber(thispercent)
						this:SetChecked(Heart_Config["classes"][Heart_current_class][thispercent]["Scale"])
					</OnShow>
				</Scripts>
			</CheckButton>
		</Frames>
	</Frame>

	<Frame name="Heart_GUIMouseButtonTemplate" virtual="true">
		<Size>
			<AbsDimension x="365" y="35"/>
		</Size>
                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                          <EdgeSize>
                                    <AbsValue val="16"/>
                          </EdgeSize>
                          <TileSize>
                                    <AbsValue val="16"/>
                          </TileSize>
                          <BackgroundInsets>
                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                          </BackgroundInsets>
                </Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentText" inherits="GameFontHighlightSmall" justifyH="LEFT" text="">
					<Size>
						<AbsDimension x="80" y="35"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT">
							<Offset>
								<AbsDimension x="5" y="1" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button name="$parentDropDownMenu" inherits="UIDropDownMenuTemplate">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentText" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="-15" y="-3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnShow>
						UIDropDownMenu_Initialize(this, Heart_MouseDropDownMenuInitialize)
						UIDropDownMenu_SetWidth(125)
					</OnShow>
				</Scripts>
			</Button>
			<Slider name="$parentRankSlider" inherits="OptionsSliderTemplate">
				<Size>
					<AbsDimension x="117" y="15"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentDropDownMenu" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="-5" y="7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
					<OnValueChanged>
						Heart_UpdateSettings();
					</OnValueChanged>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText();
						getglobal(this:GetName() .. "Low"):SetText(Heart_GUI_rank);
						getglobal(this:GetName() .. "High"):SetText();
						this:SetMinMaxValues(1, 11);
						this:SetValueStep(1);
					</OnLoad>
				</Scripts>
			</Slider>
		</Frames>
	</Frame>
	<Frame name="Heart_GUISliderTemplate" virtual="true">
		<Size>
			<AbsDimension x="135" y="25"/>
		</Size>
		<Frames>
			<Slider name="$parentSlider" inherits="OptionsSliderTemplate">
				<Size>
					<AbsDimension x="130" y="15"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-2.5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
					<OnValueChanged>
						Heart_UpdateSettings();
					</OnValueChanged>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText();
						getglobal(this:GetName() .. "Low"):SetText();
						getglobal(this:GetName() .. "High"):SetText();
						this:SetMinMaxValues(0, 1);
						this:SetValueStep(0.01);
					</OnLoad>
				</Scripts>
			</Slider>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUISliderTemplate2" virtual="true">
		<Size>
			<AbsDimension x="150" y="25"/>
		</Size>
		<Frames>
			<Slider name="$parentSlider" inherits="OptionsSliderTemplate">
				<Size>
					<AbsDimension x="145" y="15"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-2.5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip();
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide();
					</OnLeave>
					<OnValueChanged>
						Heart_UpdateSettings();
					</OnValueChanged>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText();
						getglobal(this:GetName() .. "Low"):SetText();
						getglobal(this:GetName() .. "High"):SetText();
						this:SetMinMaxValues(0, 1);
						this:SetValueStep(0.01);
					</OnLoad>
				</Scripts>
			</Slider>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
	<Button name="Heart_GUITabButtonTemplate" virtual="true" frameStrata="MEDIUM">
        <Layers>
        	<Layer level="BACKGROUND">
        		<Texture name="$parentLeftDisabled" file="Interface\PaperDollInfoFrame\UI-Character-ActiveTab">
        			<Size>
        				<AbsDimension x="16" y="32"/>
        			</Size>
        			<Anchors>
        				<Anchor point="TOPLEFT">
        					<Offset>
        						<AbsDimension x="0" y="0"/>
        					</Offset>
        				</Anchor>
        			</Anchors>
					<TexCoords left="0" right="0.15625" top="0" bottom="1.0"/>
        		</Texture>
				<Texture name="$parentMiddleDisabled" file="Interface\PaperDollInfoFrame\UI-Character-ActiveTab">
        			<Size>
        				<AbsDimension x="34" y="32"/>
        			</Size>
        			<Anchors>
        				<Anchor point="LEFT" relativeTo="$parentLeftDisabled" relativePoint="RIGHT"/>
        			</Anchors>
					<TexCoords left="0.15625" right="0.84375" top="0" bottom="1.0"/>
        		</Texture>
				<Texture name="$parentRightDisabled" file="Interface\PaperDollInfoFrame\UI-Character-ActiveTab">
        			<Size>
        				<AbsDimension x="16" y="32"/>
        			</Size>
        			<Anchors>
        				<Anchor point="LEFT" relativeTo="$parentMiddleDisabled" relativePoint="RIGHT"/>
        			</Anchors>
					<TexCoords left="0.84375" right="1.0" top="0" bottom="1.0"/>
        		</Texture>
				<Texture name="$parentLeft" file="Interface\PaperDollInfoFrame\UI-Character-InActiveTab">
        			<Size>
        				<AbsDimension x="16" y="32"/>
        			</Size>
        			<Anchors>
        				<Anchor point="TOPLEFT"/>
        			</Anchors>
					<TexCoords left="0" right="0.15625" top="0" bottom="1.0"/>
        		</Texture>
				<Texture name="$parentMiddle" file="Interface\PaperDollInfoFrame\UI-Character-InActiveTab">
        			<Size>
        				<AbsDimension x="34" y="32"/>
        			</Size>
        			<Anchors>
        				<Anchor point="LEFT" relativeTo="$parentLeft" relativePoint="RIGHT"/>
        			</Anchors>
					<TexCoords left="0.15625" right="0.84375" top="0" bottom="1.0"/>
        		</Texture>
				<Texture name="$parentRight" file="Interface\PaperDollInfoFrame\UI-Character-InActiveTab">
        			<Size>
        				<AbsDimension x="16" y="32"/>
        			</Size>
        			<Anchors>
        				<Anchor point="LEFT" relativeTo="$parentMiddle" relativePoint="RIGHT"/>
        			</Anchors>
					<TexCoords left="0.84375" right="1.0" top="0" bottom="1.0"/>
        		</Texture>
        	</Layer>
        </Layers>
		<NormalText name="$parentText" inherits="GameFontNormalSmall"/>
		<HighlightText inherits="GameFontHighlightSmall" justifyH="CENTER"/>
		<DisabledText inherits="GameFontHighlightSmall" justifyH="CENTER"/>
		<HighlightTexture name="$parentHighlightTexture" file="Interface\PaperDollInfoFrame\UI-Character-Tab-Highlight" alphaMode="ADD">
			<Anchors>
				<Anchor point="LEFT">
					<Offset>
						<AbsDimension x="10" y="2"/>
					</Offset>
				</Anchor>
				<Anchor point="RIGHT">
					<Offset>
						<AbsDimension x="-10" y="2"/>
					</Offset>
				</Anchor>
			</Anchors>
		</HighlightTexture>
	</Button>

	<Frame name="Heart_GUITextBox" movable="true" parent="UIParent" enableMouse="true" hidden="true" toplevel="true">
		<Size>
			<AbsDimension x="192" y="96"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11"/>
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentText" inherits="GameFontNormal" justifyH="CENTER">
					<Size>
						<AbsDimension x="128" y="12"/>
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="-16"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<EditBox name="$parentEditBox" letters="128" historyLines="0" multiline="false" autoFocus="true" numeric="false">
				<Size>
					<AbsDimension x="140" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentText" relativePoint="BOTTOM"/>
				</Anchors>
				<FontString name="$parentText" inherits="GameFontHighlight" wraponspaces="false" justifyH="LEFT" text=""/>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Left">
							<Size>
								<AbsDimension x="120" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT">
									<Offset>
										<AbsDimension x="-8" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Right">
							<Size>
								<AbsDimension x="120" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="8" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
			</EditBox>
			<Button name="$parentButtonOK" inherits="OptionsButtonTemplate" text="Heart_GUI_okay">
				<Size>
					<AbsDimension x="80" y="21"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="16" y="16"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						local text = Heart_GUITextBoxEditBox:GetText()
						if (not text or text == "") then
							return
						end
						text = string.lower(text)
						if (text == "load" or text == "save" or text == "delete" or text == "list" or text == "none") then
							C_Print("You may not name any heal class \"load\", \"save\", \"delete\", \"list\" or \"none\". Those names are reserved.", "|cffff0000")
							return
						end
						if (not Heart_Config["classes"]) then
							Heart_Config["classes"] = {}
						end
						if (not Heart_Config["classes"][text]) then
							Heart_Config["classes"][text] = {}
						end
						Heart_UpdateClassButtons()
						Heart_UpdateSettings()
						Heart_ClassDropDownMenuInitialize()
						Heart_ClassDropDownMenuUpdate(text)
						Heart_GUITextBox:Hide()
						Heart_GUITextBoxEditBox:SetText("")
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parentButtonCancel" inherits="OptionsButtonTemplate" text="Heart_GUI_cancel">
				<Size>
					<AbsDimension x="80" y="21"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-16" y="16"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Heart_GUITextBoxEditBox:SetText("")
						Heart_GUITextBox:Hide()
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				tinsert(UISpecialFrames, "Destiny_GUITextBox")
                                Heart_GUITextBoxText:SetText(Heart_GUI_new_class)
                                Heart_GUITextBoxButtonOK:SetText(Heart_GUI_okay)
                                Heart_GUITextBoxButtonCancel:SetText(Heart_GUI_cancel)
			</OnLoad>
			<OnMouseUp>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
			</OnMouseUp>
			<OnMouseDown>
				if (((not this.isLocked) or (this.isLocked == 0)) and (arg1 == "LeftButton")) then
					this:StartMoving()
					this.isMoving = true
				end
			</OnMouseDown>
			<OnHide>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
				
			</OnHide>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIProfileTextBox" movable="true" parent="UIParent" enableMouse="true" hidden="true" toplevel="true">
		<Size>
			<AbsDimension x="192" y="96"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11"/>
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="$parentText" inherits="GameFontNormal" justifyH="CENTER" text="Heart_GUI_new_profile">
					<Size>
						<AbsDimension x="128" y="12"/>
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="-16"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<EditBox name="$parentEditBox" letters="128" historyLines="0" multiline="false" autoFocus="true" numeric="false">
				<Size>
					<AbsDimension x="140" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentText" relativePoint="BOTTOM"/>
				</Anchors>
				<FontString name="$parentText" inherits="GameFontHighlight" wraponspaces="false" justifyH="LEFT" text=""/>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Left">
							<Size>
								<AbsDimension x="120" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT">
									<Offset>
										<AbsDimension x="-8" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Right">
							<Size>
								<AbsDimension x="120" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="8" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
			</EditBox>
			<Button name="$parentButtonOK" inherits="OptionsButtonTemplate" text="Heart_GUI_okay">
				<Size>
					<AbsDimension x="80" y="21"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="16" y="16"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						local text = Heart_GUIProfileTextBoxEditBox:GetText()
						if (not text or text == "") then
                                                        C_Print("No Profile Name Entered")
							return
						end
						text = string.lower(text)
						if (text == "load" or text == "save" or text == "delete" or text == "list" or text == "none") then
							C_Print("You may not name any profile \"load\", \"save\", \"delete\", \"list\" or \"none\". Those names are reserved.", "|cffff0000")
							return
						end
						Heart_Save_Profile(text)
						C_Print("Profile: \""..text.."\" saved")
						Heart_ProfileDropDownMenuInitialize()
						Heart_ProfileDropDownMenuUpdate(text)
						Heart_GUIProfileTextBox:Hide()
						Heart_GUIProfileTextBoxEditBox:SetText("")
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parentButtonCancel" inherits="OptionsButtonTemplate" text="Heart_GUI_cancel">
				<Size>
					<AbsDimension x="80" y="21"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMRIGHT">
						<Offset>
							<AbsDimension x="-16" y="16"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnClick>
						Heart_GUIProfileTextBoxEditBox:SetText("")
						Heart_GUIProfileTextBox:Hide()
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				tinsert(UISpecialFrames, "Heart_GUIProfileTextBox")
                                Heart_GUIProfileTextBoxText:SetText(Heart_GUI_new_profile)
                                Heart_GUIProfileTextBoxButtonOK:SetText(Heart_GUI_okay)
                                Heart_GUIProfileTextBoxButtonCancel:SetText(Heart_GUI_cancel)
			</OnLoad>
			<OnMouseUp>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
			</OnMouseUp>
			<OnMouseDown>
				if (((not this.isLocked) or (this.isLocked == 0)) and (arg1 == "LeftButton")) then
					this:StartMoving()
					this.isMoving = true
				end
			</OnMouseDown>
			<OnHide>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
			</OnHide>
		</Scripts>
	</Frame>
     	<Frame name="Heart_GUI" hidden="true" parent="UIParent" enableMouse="true" movable="true" toplevel="true" frameStrata="BACKGROUND">
		<Size>
			<AbsDimension x="425" y="310"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Backdrop name="HeartGUIBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border">
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Layers>
			<Layer level="ARTWORK">
				<FontString name="Heart_GUIHeader" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="TOP" relativeTo="Heart_GUI">
							<Offset>
								<AbsDimension x="0" y="-15" />
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<Button name="Heart_GUICloseButton" inherits="UIPanelCloseButton" frameStrata="DIALOG">
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="Heart_GUI" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-3" y="-3"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				if (not Heart_supported_classes[C_my_class]) then
                                   tinsert(UISpecialFrames, "Heart_GUI")
				   PanelTemplates_SetNumTabs(Heart_GUI, 1)
				   CreateFrame("Button", "Heart_GUITab1", Heart_GUI, "Heart_GUITabButtonTemplate");
				   Heart_GUITab1:SetID("1")
				   getglobal("Heart_GUITab1"):SetText(Heart_GUI_tab_title[1]);
				   getglobal("Heart_GUITab1"):SetPoint("TOPLEFT", "$parent", "BOTTOMLEFT", 5, 8)
                                   getglobal("Heart_GUITab1"):SetWidth(55)
                                   getglobal("Heart_GUITab1"):SetHeight(32)
				   getglobal("Heart_GUITab1"):SetScript("OnClick", nil)
				   getglobal("Heart_GUITab1"):SetScript("OnLoad", function() this:SetFrameLevel(this:GetFrameLevel() + 4) PanelTemplates_TabResize(-5) end)
                                   getglobal("Heart_GUITab1"):SetScript("OnEnter", function() Heart_ShowTooltip() end)
			           getglobal("Heart_GUITab1"):SetScript("OnLeave", function() GameTooltip:Hide() end)
				   Heart_GUI.selectedTab = 1
				   PanelTemplates_UpdateTabs(Heart_GUI)
				else
                                   tinsert(UISpecialFrames, "Heart_GUI")
				   PanelTemplates_SetNumTabs(Heart_GUI, 8)
				   for i= 1,8 do
                                       CreateFrame("Button", "Heart_GUITab"..i, Heart_GUI, "Heart_GUITabButtonTemplate");
				       getglobal("Heart_GUITab"..i):SetID(tonumber(i))
				       getglobal("Heart_GUITab"..i.."Text"):SetText(Heart_GUI_tab_title[i])
				       getglobal("Heart_GUITab"..i.."Text"):SetPoint("CENTER", getglobal("Heart_GUITab"..i), "CENTER")
				       getglobal("Heart_GUITab"..i.."Text"):SetJustifyH("CENTER")
                                       getglobal("Heart_GUITab"..i):SetWidth(66)
                                       getglobal("Heart_GUITab"..i):SetHeight(32)
                                       getglobal("Heart_GUITab"..i):SetScript("OnShow", function()  PanelTemplates_TabResize(-15) this:SetFrameLevel(this:GetFrameLevel() + 4) end)
                                       getglobal("Heart_GUITab"..i):SetScript("OnClick", function() PanelTemplates_Tab_OnClick(Heart_GUI) local id = this:GetID() Heart_GUIClasses:Hide() Heart_GUIMouseKeys:Hide() Heart_GUIPriorities:Hide() Heart_GUIRaid:Hide() Heart_GUIAdv:Hide() Heart_GUISettings:Hide() Heart_GUIDisplay:Hide() Heart_GUIRez:Hide() if (id == 1) then Heart_GUIClasses:Show() elseif (id == 2) then Heart_GUISettings:Show() elseif (id == 3) then Heart_GUIPriorities:Show() elseif (id == 4) then Heart_GUIRaid:Show() Heart_SetRaidChecked() elseif (id == 5) then Heart_GUIMouseKeys:Show() elseif (id == 6) then Heart_GUIDisplay:Show() elseif (id == 7) then Heart_GUIRez:Show() elseif (id == 8) then Heart_GUIAdv:Show() end end)
                                       getglobal("Heart_GUITab"..i):SetScript("OnEnter", function() Heart_ShowTooltip() end)
			               getglobal("Heart_GUITab"..i):SetScript("OnLeave", function() GameTooltip:Hide() end)
                                   end
				   getglobal("Heart_GUITab1"):SetPoint("TOPLEFT", "$parent", "BOTTOMLEFT", 5, 8)
                                   for x= 2,8 do
                                       getglobal("Heart_GUITab"..x):SetPoint("LEFT", getglobal("Heart_GUITab"..(x - 1)), "RIGHT")
                                   end
				   Heart_GUI.selectedTab = 1
				   PanelTemplates_UpdateTabs(Heart_GUI)
                                end
				Heart_GUIHeader:SetText(Heart_GUI_title)
			</OnLoad>
			<OnMouseUp>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
			</OnMouseUp>
			<OnMouseDown>
				if ((not this.isLocked or this.isLocked == 0) and arg1 == "LeftButton") then
					this:StartMoving()
					this.isMoving = true
				end
			</OnMouseDown>
			<OnHide>
				if (this.isMoving) then
					this:StopMovingOrSizing()
					this.isMoving = false
				end
				for a = 1, 15 do
					local bar = getglobal("Heart_GUIHealBars" .. a)
					if (bar:GetMinMaxValues() == 666) then
						getglobal("Heart_GUIHealBars" .. a):Hide()
					end
				end
				Heart_GUIHealCurrent:Hide()
				Heart_UpdateClassButtons()
			</OnHide>
			<OnShow>
				if (not Heart_spellbook_checked) then
					Heart_UpdateSpells()
				end
				if (Heart_Config["show_healing_all"] or Heart_Config["show_healing_me"]) then
					for a = 1, 15 do
						getglobal("Heart_GUIHealBars" .. a):SetAlpha(1.0)
						getglobal("Heart_GUIHealBars" .. a):Show()
					end
				end
				Heart_GUIHealCurrent:SetAlpha(1.0)
				Heart_GUIHealCurrent:Show()
				if (not Heart_supported_classes[C_my_class]) then
				    Heart_GUIClasses:Hide()
				    Heart_GUIDisplay:Show()
				else
				    Heart_UpdateClassButtons()
				end
			</OnShow>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIClasses" parent="Heart_GUI" hidden="false">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
			<Button name="Heart_GUIClassDropDownMenu" inherits="UIDropDownMenuTemplate">
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativeTo="$parent" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-2" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnShow>
						UIDropDownMenu_Initialize(this, Heart_ClassDropDownMenuInitialize)
						UIDropDownMenu_SetSelectedID(this, 1)
						UIDropDownMenu_SetWidth(105)
					</OnShow>
				</Scripts>
			</Button>
			<Button name="Heart_GUINewClassButton" inherits="OptionsButtonTemplate" text="Heart_GUI_new">
				<Size>
					<AbsDimension x="125" y="25"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIClassDropDownMenu" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="-15" y="2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
				        <OnShow>
                                                this:SetText(Heart_GUI_new)
				        </OnShow>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnClick>
						Heart_GUITextBox:Show()
					</OnClick>
				</Scripts>
			</Button>
			<Button name="Heart_GUIDeleteClassButton" inherits="OptionsButtonTemplate" text="Heart_GUI_delete">
				<Size>
					<AbsDimension x="125" y="25"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUINewClassButton" relativePoint="RIGHT">
					</Anchor>
				</Anchors>
				<Scripts>
				        <OnShow>
                                                this:SetText(Heart_GUI_delete)
				        </OnShow>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnClick>
						Heart_Config["classes"][Heart_current_class] = nil
						Heart_current_class = nil
						Heart_ClassDropDownMenuInitialize()
						Heart_UpdateClassButtons()
					</OnClick>
				</Scripts>
			</Button>
			<Frame name="Heart_GUISpellSelect1" inherits="Heart_GUISpellSelectTemplate"  enableMouse="true" movable="true">
				<Anchors>
					<Anchor point="TOPLEFT">
                                                <Offset>
						        <AbsDimension x="15" y="-20"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
				         <OnLoad>
                                             this:RegisterForDrag("LeftButton");
				         </OnLoad>
				         <OnReceiveDrag>
                                         this:StartMoving()
					</OnReceiveDrag>
				         <OnMouseUp>
				         this:StopMovingOrSizing()
				         </OnMouseUp>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUISpellSelect2" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect1" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUISpellSelect3" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect2" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUISpellSelect4" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect3" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUISpellSelect5" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect4" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUISpellSelect6" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUISpellSelect1" relativePoint="TOPRIGHT">
                                                <Offset>
						        <AbsDimension x="2" y="0"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUISpellSelect7" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect6" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUISpellSelect8" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect7" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
                        <Frame name="Heart_GUISpellSelect9" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect8" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>
                        <Frame name="Heart_GUISpellSelect10" inherits="Heart_GUISpellSelectTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISpellSelect9" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="-2"/>
                                                </Offset>
					</Anchor>
				</Anchors>
			</Frame>

			<Frame name="Heart_GUIClassesInset">
				<Size>
					<AbsDimension x="290" y="215"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="Heart_GUIClasses" relativePoint="TOPRIGHT">
                                                <Offset>
						        <AbsDimension x="-10" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
			        <Frames>
			               <Frame name="Heart_GUIClass1" inherits="Heart_GUIClassTemplate" ID="1">
				              <Anchors>
					               <Anchor point="TOPLEFT" relativeTo="Heart_GUIClassesInset">
						               <Offset>
							               <AbsDimension x="4" y="-3"/>
						                </Offset>
					                 </Anchor>
                                               </Anchors>
                                       </Frame>
                                       <Frame name="Heart_GUIClass2" inherits="Heart_GUIClassTemplate" ID="2">
                                              <Anchors>
                                                       <Anchor point="TOPLEFT" relativeTo="Heart_GUIClass1" relativePoint="BOTTOMLEFT">
						               <Offset>
							               <AbsDimension x="0" y="3"/>
						                </Offset>
					                 </Anchor>
                                              </Anchors>
                                       </Frame>
                                       <Frame name="Heart_GUIClass3" inherits="Heart_GUIClassTemplate" ID="3">
                                              <Anchors>
                                                       <Anchor point="TOPLEFT" relativeTo="Heart_GUIClass2" relativePoint="BOTTOMLEFT">
						               <Offset>
							               <AbsDimension x="0" y="3"/>
						                </Offset>
					                 </Anchor>
                                              </Anchors>
                                       </Frame>
                                       <Frame name="Heart_GUIClass4" inherits="Heart_GUIClassTemplate" ID="4">
                                              <Anchors>
                                                       <Anchor point="TOPLEFT" relativeTo="Heart_GUIClass3" relativePoint="BOTTOMLEFT">
						               <Offset>
							               <AbsDimension x="0" y="3"/>
						                </Offset>
					                 </Anchor>
                                              </Anchors>
                                       </Frame>
                                       <Frame name="Heart_GUIClass5" inherits="Heart_GUIClassTemplate" ID="5">
                                              <Anchors>
                                                       <Anchor point="TOPLEFT" relativeTo="Heart_GUIClass4" relativePoint="BOTTOMLEFT">
						               <Offset>
							               <AbsDimension x="0" y="3"/>
						                </Offset>
					                 </Anchor>
                                              </Anchors>
                                       </Frame>
                                       <Frame name="Heart_GUIClass6" inherits="Heart_GUIClassTemplate" ID="6">
                                              <Anchors>
                                                       <Anchor point="TOPLEFT" relativeTo="Heart_GUIClass5" relativePoint="BOTTOMLEFT">
						               <Offset>
							               <AbsDimension x="0" y="3"/>
						                </Offset>
					                 </Anchor>
                                              </Anchors>
                                       </Frame>
                                       <Frame name="Heart_GUIClass7" inherits="Heart_GUIClassTemplate" ID="7">
                                              <Anchors>
                                                       <Anchor point="TOPLEFT" relativeTo="Heart_GUIClass6" relativePoint="BOTTOMLEFT">
						               <Offset>
							               <AbsDimension x="0" y="3"/>
						                </Offset>
					                 </Anchor>
                                              </Anchors>
                                       </Frame>
                                </Frames>
                           </Frame>
                </Frames>
		<Scripts>
			<OnShow>
			        local counter  = 1
                                if counter &lt; 10 then
                                   for spell, data in Heart_Spells do
                                     if (spell) and (not Heart_rez_spells[spell]) then
                                     local ranks = table.getn(Heart_Spells[spell])
                                     getglobal("Heart_GUISpellSelect" .. counter):Show()
                                     getglobal("Heart_GUISpellSelect" .. counter .. "SpellTexture"):SetTexture(data["Texture"])
                                     getglobal("Heart_GUISpellSelect" .. counter .. "SpellText"):SetText(spell)
                                     counter = counter +1
                                     end
                                   end
                                end
			</OnShow>
			<OnMouseDown>
			</OnMouseDown>
			<OnReceiveDrag>
			</OnReceiveDrag>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIHealBars" parent="UIParent" hidden="false">
		<Size>
			<AbsDimension x="256" y="210"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Frames>
			<StatusBar name="$parent1" inherits="Heart_GUIBarTemplate" movable="true" enableMouse="true">
				<Anchors>
					<Anchors point="TOP"/>
				</Anchors>
				<Scripts>
					<OnMouseUp>
						if (this.isMoving) then
							this:StopMovingOrSizing()
							this.isMoving = false
						end
					</OnMouseUp>
					<OnMouseDown>
						if (((not this.isLocked) or (this.isLocked == 0)) and (arg1 == "LeftButton") ) then
							this:StartMoving()
							this.isMoving = true
						end
					</OnMouseDown>
					<OnHide>
						if (this.isMoving) then
							this:StopMovingOrSizing()
							this.isMoving = false
						end
					</OnHide>
				</Scripts>
			</StatusBar>
			<StatusBar name="$parent2" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent1" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent3" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent2" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent4" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent3" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent5" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent4" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent6" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent5" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent7" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent6" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent8" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent7" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent9" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent8" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent10" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent9" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent11" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent10" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent12" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent11" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent13" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent12" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent14" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent13" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent15" inherits="Heart_GUIBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent14" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
		</Frames>	</Frame>
	<Frame name="Heart_GUIHealCurrent" parent="UIParent" hidden="true">
		<Size>
			<AbsDimension x="256" y="56"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Frames>
			<StatusBar name="$parentSpell" inherits="Heart_GUIBarTemplate" movable="true" enableMouse="true" hidden="false">
				<Anchors>
					<Anchors point="TOP"/>
				</Anchors>
				<Scripts>
					<OnMouseUp>
						if (this.isMoving) then
							this:StopMovingOrSizing()
							this.isMoving = false
						end
					</OnMouseUp>
					<OnMouseDown>
						if (((not this.isLocked) or (this.isLocked == 0)) and (arg1 == "LeftButton")) then
							this:StartMoving()
							this.isMoving = true
						end
					</OnMouseDown>
					<OnHide>
						if (this.isMoving) then
							this:StopMovingOrSizing()
							this.isMoving = false
						end
					</OnHide>
				</Scripts>
			</StatusBar>
			<StatusBar name="$parentTarget" inherits="Heart_GUIBarTemplate" hidden="false">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentSpell" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parentAfter" inherits="Heart_GUIBarTemplate" hidden="false">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentTarget" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parentOverheal" inherits="Heart_GUIBarTemplate" hidden="false">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentAfter" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
		</Frames>
		<Scripts>
			<OnLoad>
				Heart_GUIHealCurrentSpellText:SetText("Spell Name(Rank) Heal/HoT")
				Heart_GUIHealCurrentTargetText:SetText("Spell Target(Current Health)")
				Heart_GUIHealCurrentAfterText:SetText("Estimated Health After")
				Heart_GUIHealCurrentOverhealText:SetText("Estimated OverHeal")
			</OnLoad>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIMouseKeys" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
		    <Frame name="$parentInset1">
				<Size>
					<AbsDimension x="175" y="83"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
                                                <Offset>
						        <AbsDimension x="20" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
                        <Frame name="Heart_GUIEnableMouse" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="-8" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText("Enable Click Healing")
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"enable_mouse\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["enable_mouse"])
					</OnShow>
				</Scripts>
			</Frame>
                        <Frame name="Heart_GUIHealSelfModifier" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIEnableMouse" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="5" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_self)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_self_modifier\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 9)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_self_modifier"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHealTargettargetModifier" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHealSelfModifier" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_targettarget)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_targettarget_modifier\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 9)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_targettarget_modifier"])
					</OnShow>
				</Scripts>
			</Frame>
		      </Frames>
                    </Frame>
		    <Frame name="$parentInset2">
				<Size>
					<AbsDimension x="175" y="83"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT">
                                                <Offset>
						        <AbsDimension x="-20" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIHealEnoughModifier" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_enough)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_enough_modifier\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 9)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_enough_modifier"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHealMaxModifier" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHealEnoughModifier" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_max)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_max_modifier\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 9)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_max_modifier"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHealNoneModifier" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHealMaxModifier" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_none)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_none_modifier\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 9)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_none_modifier"])
					</OnShow>
				</Scripts>
			</Frame>
		      </Frames>
                    </Frame>
			<Frame name="Heart_GUILeftButton" inherits="Heart_GUIMouseButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentInset1" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="-2" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText(Heart_GUI_left_button)
					</OnLoad>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIRightButton" inherits="Heart_GUIMouseButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUILeftButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText(Heart_GUI_right_button)
					</OnLoad>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMiddleButton" inherits="Heart_GUIMouseButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUIRightButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText(Heart_GUI_middle_button)
					</OnLoad>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUICustomButton1" inherits="Heart_GUIMouseButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUIMiddleButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText(Heart_GUI_custom_1)
					</OnLoad>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUICustomButton2" inherits="Heart_GUIMouseButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUICustomButton1" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="0" y="3"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "Text"):SetText(Heart_GUI_custom_2)
					</OnLoad>
				</Scripts>
			</Frame>
		</Frames>
	</Frame>
	<Frame name="Heart_GUIPriorities" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
		<!--PLAYER/PARTY/RAID-->
		    <Frame name="PlayersInset">
				<Size>
					<AbsDimension x="175" y="145"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUIPriorities" relativePoint="TOPLEFT">
                                                <Offset>
						        <AbsDimension x="20" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIPlayerPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_player_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"player_priority\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["player_priority"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPartyPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIPlayerPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_party_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"party_priority\"]"
					</OnLoad>
					<OnShow>
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["party_priority"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIRaidPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIPartyPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_raid_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"raid_priority\"]"
					</OnLoad>
					<OnShow>
					
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["raid_priority"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPetPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRaidPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_pet_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"pet_priority\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["pet_priority"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMTPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIPetPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_MT_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"MT_priority\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(0.9, 0.2, 0.1)					
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["MT_priority"])
					</OnShow>
				</Scripts>
			</Frame>
		       </Frames>
		    </Frame>
			<!--BUFF/DEBUFF-->
		    <Frame name="BuffInset">
				<Size>
					<AbsDimension x="175" y="145"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="PlayersInset" relativePoint="RIGHT">
                                                <Offset>
						        <AbsDimension x="0" y="0"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIBOPPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP">
						<Offset>
							<AbsDimension x="0" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_bop_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"buff_affect_priority\"][C_Blessing_of_protection]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(0.2, 0.9, 0.1)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(0.2, 0.9, 0.1)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["buff_affect_priority"][C_Blessing_of_protection])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPWSPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIBOPPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_pws_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"buff_affect_priority\"][C_Power_word_shield]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(0.2, 0.9, 0.1)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(0.2, 0.9, 0.1)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["buff_affect_priority"][C_Power_word_shield])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIRBPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIPWSPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_rb_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"debuff_affect_priority\"][C_Recently_bandaged]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["debuff_affect_priority"][C_Recently_bandaged])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIWSPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRBPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_ws_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"debuff_affect_priority\"][C_Weakened_soul]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["debuff_affect_priority"][C_Weakened_soul])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMSPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIWSPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_ms_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"debuff_affect_priority\"][C_Mortal_strike]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(0.9, 0.2, 0.1)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["debuff_affect_priority"][C_Mortal_strike])
					</OnShow>
				</Scripts>
			</Frame>
		       </Frames>
		    </Frame>
			<!--CLASSES-->
		    <Frame name="ClassesInset">
				<Size>
					<AbsDimension x="350" y="120"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="PlayersInset" relativePoint="BOTTOMLEFT">
                                                <Offset>
						        <AbsDimension x="0" y="-5"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIDruidPriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="10" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_druid_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Druid]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["DRUID"].r, RAID_CLASS_COLORS["DRUID"].g, RAID_CLASS_COLORS["DRUID"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["DRUID"].r, RAID_CLASS_COLORS["DRUID"].g, RAID_CLASS_COLORS["DRUID"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Druid])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHunterPriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIDruidPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_hunter_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Hunter]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["HUNTER"].r, RAID_CLASS_COLORS["HUNTER"].g, RAID_CLASS_COLORS["HUNTER"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["HUNTER"].r, RAID_CLASS_COLORS["HUNTER"].g, RAID_CLASS_COLORS["HUNTER"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Hunter])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMagePriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHunterPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_mage_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Mage]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["MAGE"].r, RAID_CLASS_COLORS["MAGE"].g, RAID_CLASS_COLORS["MAGE"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["MAGE"].r, RAID_CLASS_COLORS["MAGE"].g, RAID_CLASS_COLORS["MAGE"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Mage])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPaladinPriestPriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIMagePriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnShow>
						if (UnitFactionGroup("player") == C_Alliance) then
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_paladin_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Paladin]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Paladin])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["PALADIN"].r, RAID_CLASS_COLORS["PALADIN"].g, RAID_CLASS_COLORS["PALADIN"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["PALADIN"].r, RAID_CLASS_COLORS["PALADIN"].g, RAID_CLASS_COLORS["PALADIN"].b)
						else
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_priest_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Priest]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Priest])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
						end
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPriestRoguePriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="-15" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnShow>
						if (UnitFactionGroup("player") == C_Alliance) then
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_priest_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Priest]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Priest])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
						else
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_rogue_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Rogue]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Rogue])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
						end
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIRogueShamanPriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIPriestRoguePriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnShow>
						if (UnitFactionGroup("player") == C_Alliance) then
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_rogue_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Rogue]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Rogue])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
						else
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_shaman_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Shaman]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Shaman])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["SHAMAN"].r, RAID_CLASS_COLORS["SHAMAN"].g, RAID_CLASS_COLORS["SHAMAN"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["SHAMAN"].r, RAID_CLASS_COLORS["SHAMAN"].g, RAID_CLASS_COLORS["SHAMAN"].b)
						end
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIWarlockPriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRogueShamanPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_warlock_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Warlock]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["WARLOCK"].r, RAID_CLASS_COLORS["WARLOCK"].g, RAID_CLASS_COLORS["WARLOCK"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["WARLOCK"].r, RAID_CLASS_COLORS["WARLOCK"].g, RAID_CLASS_COLORS["WARLOCK"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Warlock])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIWarriorPriority" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIWarlockPriority" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_warrior_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"class_priority\"][C_Warrior]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["WARRIOR"].r, RAID_CLASS_COLORS["WARRIOR"].g, RAID_CLASS_COLORS["WARRIOR"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["WARRIOR"].r, RAID_CLASS_COLORS["WARRIOR"].g, RAID_CLASS_COLORS["WARRIOR"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["class_priority"][C_Warrior])
					</OnShow>
				</Scripts>
			</Frame>
		       </Frames>
		    </Frame>
		</Frames>
	</Frame>
	<Frame name="Heart_GUIRaid" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
			<Button name="Heart_GUIRaidCheckAllButton" inherits="Heart_GUIPanelButtonTemplate" text="Heart_GUI_check_all">
				<Size>
					<AbsDimension x="125" y="28"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="6" y="-15"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
				        <OnLoad>
				                this:RegisterForClicks("LeftButtonUp", "RightButtonDown")
				        </OnLoad>
                                        <OnShow>
                                                this:SetText(Heart_GUI_check_all)
				        </OnShow>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnClick>
					     if arg1 == "LeftButton" then
                                                for a = 1, 8 do
							for b = 1, 5 do
								Heart_Config["raid"][a][b] = 1
							end
						end
					     else
						for a = 1, 8 do
							for b = 1, 5 do
								Heart_Config["raid"][a][b] = 0
							end
						end
                                             end
					     Heart_SetRaidChecked()
					</OnClick>
				</Scripts>
			</Button>
			<Frame name="Heart_GUIRaidUncheckedPriority" inherits="Heart_GUISliderTemplate">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidCheckAllButton" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="2" y="-2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_unchecked_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"unchecked_priority\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0, 1)
						getglobal(this:GetName() .. "Slider"):SetValueStep(0.01)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["unchecked_priority"])
					</OnShow>
				</Scripts>
			</Frame>
			<Button name="Heart_GUIRaidInvertCheckedButton" inherits="Heart_GUIPanelButtonTemplate" text="Heart_GUI_invert_checked">
				<Size>
					<AbsDimension x="125" y="28"/>
				</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidUncheckedPriority" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="2" y="2"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
				        <OnShow>
                                                this:SetText(Heart_GUI_invert_checked)
				        </OnShow>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnClick>
						for group = 1, 8 do
							for slot = 1, 5 do
								Heart_Config["raid"][group][slot] = 1 - Heart_Config["raid"][group][slot]
							end
						end
						Heart_SetRaidChecked()
					</OnClick>
				</Scripts>
			</Button> 
			<Frame name="Heart_GUIRaidGroup1" inherits="Heart_GUIRaidGroupTemplate" id="1">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUIRaidCheckAllButton" relativePoint="BOTTOMLEFT">
						<Offset>
							<AbsDimension x="5" y="-17"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup2" inherits="Heart_GUIRaidGroupTemplate" id="2">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidGroup1" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup3" inherits="Heart_GUIRaidGroupTemplate" id="3">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRaidGroup1" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="-15"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup4" inherits="Heart_GUIRaidGroupTemplate" id="4">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidGroup3" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup5" inherits="Heart_GUIRaidGroupTemplate" id="5">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidGroup2" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup6" inherits="Heart_GUIRaidGroupTemplate" id="6">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidGroup5" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup7" inherits="Heart_GUIRaidGroupTemplate" id="7">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidGroup4" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
			<Frame name="Heart_GUIRaidGroup8" inherits="Heart_GUIRaidGroupTemplate" id="8">
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRaidGroup7" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="6" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
			</Frame>
		</Frames>
	</Frame>
	<Frame name="Heart_GUISettings" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
		    <Frame name="$parentInset1">
				<Size>
					<AbsDimension x="370" y="120"/>
				</Size>
				<Anchors>
					<Anchor point="TOP">
                                                <Offset>
						        <AbsDimension x="0" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIHOTMinCancelThreshold" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPLEFT">
					        <Offset>
					                <AbsDimension x="10" y="-5"/>
					        </Offset>
                                        </Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_hot_cancel)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"hot_heal_threshold\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["hot_heal_threshold"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHOTMultiply" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHOTMinCancelThreshold" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_hot_value)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"hot_multiply\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0, 4)
						getglobal(this:GetName() .. "Slider"):SetValueStep(0.05)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["hot_multiply"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHOTMultiplyBattle" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHOTMultiply" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_hot_value_battle)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"hot_multiply_battle\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0, 4)
						getglobal(this:GetName() .. "Slider"):SetValueStep(0.05)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["hot_multiply_battle"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMaxOverheal" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHOTMultiplyBattle" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_max_overheal)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"max_overheal\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["max_overheal"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMinHealThreshold" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPRIGHT">
					        <Offset>
					                <AbsDimension x="-10" y="-5"/>
					        </Offset>
                                        </Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_min_heal_threshold)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"min_heal_threshold\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["min_heal_threshold"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHealPower" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIMinHealThreshold" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_power)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_power\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0, 2)
						getglobal(this:GetName() .. "Slider"):SetValueStep(0.05)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_power"])
					</OnShow>
					<OnValueChanged>
                                                Heart_Config["heal_power"] = this:GetValue()
                                        </OnValueChanged>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIUpdatePlayerDataTime" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHealPower" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_update_time)
						getglobal(this:GetName() .. "Slider").variable = "C_update_player_data_time"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 100)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(C_update_player_data_time * 10)
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHealStrategy" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIUpdatePlayerDataTime" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_heal_strategy)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"heal_strategy\"]"
						getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, 3)
						getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["heal_strategy"])
					</OnShow>
				</Scripts>
			</Frame>
		       </Frames>
		    </Frame>
		    <Frame name="$parentInset2">
				<Size>
					<AbsDimension x="380" y="150"/>
				</Size>
				<Anchors>
					<Anchor point="TOP" relativeTo="$parentInset1" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="0"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIUseAction" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="7" y="-6"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_hook_useaction)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"hook_useaction\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["hook_useaction"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUINinjaUseAction" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIUseAction" relativePoint="BOTTOM">
					        <Offset>
					                <AbsDimension x="0" y="3"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_ninja_useaction)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"ninja_useaction\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["ninja_useaction"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHookShields" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUINinjaUseAction" relativePoint="BOTTOM">
					        <Offset>
					                <AbsDimension x="0" y="3"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_hook_shields)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"hook_shields\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["hook_shields"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHealCharmed" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHookShields" relativePoint="BOTTOM">
					        <Offset>
					                <AbsDimension x="0" y="3"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_heal_charmed)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"heal_charmed\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["heal_charmed"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIScaleHot" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPRIGHT">
					        <Offset>
					                <AbsDimension x="-7" y="-6"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_scale_hots)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"scale_hots\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["scale_hots"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIScaleSpells" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIScaleHot" relativePoint="BOTTOM">
					        <Offset>
					                <AbsDimension x="0" y="3"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_scale_spells)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"scale_spells\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["scale_spells"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUISafeCancel" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIScaleSpells" relativePoint="BOTTOM">
					        <Offset>
					                <AbsDimension x="0" y="3"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_safe_cancel)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"safe_cancel\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["safe_cancel"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUITankTarget" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUISafeCancel" relativePoint="BOTTOM">
					        <Offset>
					                <AbsDimension x="0" y="3"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_always_tank_target)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"always_tank_target\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["always_tank_target"])
					</OnShow>
				</Scripts>
			</Frame>
		      </Frames>
		    </Frame>
		</Frames>
	</Frame>
	<Frame name="Heart_GUIDisplay" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
		    <Frame name="$parentInset1">
				<Size>
					<AbsDimension x="370" y="60"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
                                                <Offset>
						        <AbsDimension x="15" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
                        <Frame name="Heart_GUIHealBarScale" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
					        getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0.5, 1.5)
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_HealBar_Scale)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"CastBar_Scale\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["CastBar_Scale"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUICurrentHealBarsScale" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHealBarScale" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
					        getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0.5, 1.5)
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_CurrentHealBars_Scale)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"HealBars_Scale\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["HealBars_Scale"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIButtonsScale" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="-10" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
					        getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0.5, 1.5)
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_Buttons_Scale)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"Buttons_Scale\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["Buttons_Scale"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIShowHealing" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIButtonsScale" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="-10" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						if (not Heart_supported_classes[C_my_class]) then
                                                   getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_show_healing_me)
						   getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"show_healing_me\"]"
			                        else
                                                   getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_show_healing_all)
						   getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"show_healing_all\"]"
                                                end
					</OnLoad>
					<OnShow>
						if (not Heart_supported_classes[C_my_class]) then
                                                   getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["show_healing_me"])
                                                else
                                                   getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["show_healing_all"])
                                                end
					</OnShow>
				</Scripts>
			</Frame>
		      </Frames>
		    </Frame>
		    <EditBox name="Heart_GUIAboutBox" letters="500" historyLines="0" multiline="true" autoFocus="false" numeric="false">
				<Size>
					<AbsDimension x="380" y="200"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="$parent" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="10"/>
						</Offset>
					</Anchor>
				</Anchors>
				<FontString name="$parentText" inherits="GameFontHighlight" wraponspaces="false" justifyH="LEFT" text=""/>
				
				<Scripts>
				         <OnShow>
                           this:SetText(Heart_about_text)
				         </OnShow>
				          <OnEscapePressed>
				                        this:ClearFocus()
				         </OnEscapePressed>
  			</Scripts>
			</EditBox>
		</Frames>
	</Frame>
	<Frame name="Heart_GUIRez" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
		    <Frame name="$parentInset1">
				<Size>
					<AbsDimension x="370" y="120"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
                                                <Offset>
						        <AbsDimension x="15" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
                        <Frame name="Heart_GUIRezRaid" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText("Rez In Party Only")
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"rez_party_only\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["rez_party_only"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIUseActionRez" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRezRaid" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText("Hook ActionBar Rez Spells")
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"useaction_rez\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["useaction_rez"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIRezRank" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIUseActionRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
                                                   getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_rank\"]"
						   getglobal(this:GetName() .. "Slider"):SetValueStep(1)
					</OnLoad>
					<OnShow>
						if (Heart_Config["rez_spell"]) then
                                                   local spell =  Heart_Config["rez_spell"]
						   getglobal(this:GetName() .. "SliderLow"):SetText(spell)
						   getglobal(this:GetName() .. "Slider"):SetMinMaxValues(1, table.getn(Heart_Spells[spell]))
						   getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_rank"])
						end
					</OnShow>
				</Scripts>
			</Frame>
			<EditBox name="Heart_GUIRezEditBox" letters="128" historyLines="0" multiline="false" autoFocus="false" numeric="false">
				<Size>
					<AbsDimension x="160" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="$parent" relativePoint="TOPRIGHT">
						<Offset>
							<AbsDimension x="-16" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<FontString name="$parentText" inherits="GameFontHighlight" wraponspaces="false" justifyH="LEFT" text=""/>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Left">
							<Size>
								<AbsDimension x="160" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="LEFT">
									<Offset>
										<AbsDimension x="-8" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
						<Texture file="Interface\ChatFrame\UI-ChatInputBorder-Right">
							<Size>
								<AbsDimension x="160" y="32"/>
							</Size>
							<Anchors>
								<Anchor point="RIGHT">
									<Offset>
										<AbsDimension x="8" y="0"/>
									</Offset>
								</Anchor>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
				         <OnShow>
                                                        Heart_GUIRezEditBox:SetText(Heart_Config["rez_message"])
				         </OnShow>
                                         <OnEnterPressed>
                                                         Heart_GUIRezEditBox:ClearFocus()
                                                         Heart_Config["rez_message"] = Heart_GUIRezEditBox:GetText()
				         </OnEnterPressed>
				         <OnEscapePressed>
				                          Heart_GUIRezEditBox:SetText(Heart_Config["rez_message"])
				                          Heart_GUIRezEditBox:ClearFocus()
				         </OnEscapePressed>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</EditBox>
	<Frame name="Heart_GUIRezYell" virtual="true">
		<Size>
			<AbsDimension x="50" y="60"/>
		</Size>
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRezEditBox" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentCheckButtonText" inherits="GameFontHighlightSmall" justifyH="CENTER" text="Yell">
					<Size>
						<AbsDimension x="50" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="BOTTOM">
							<Offset>
								<AbsDimension x="0" y="5"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentCheckButton" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOP"/>
				</Anchors>
				<Scripts>
					<OnShow>
                                              if Heart_Config["rez_message_channel"] == "YELL" then
                                              this:SetChecked(1)
                                              else
                                              this:SetChecked(0)
                                              end
					</OnShow>
                                        <OnClick>
						if Heart_Config["rez_message_channel"] == "YELL" then
						   this:SetChecked(0)
                                                   Heart_Config["rez_message_channel"] = "NONE"
						else
                                                    this:SetChecked(1)
						    Heart_Config["rez_message_channel"] = "YELL"
                                                    Heart_GUIRezSayCheckButton:SetChecked(0)
                                                    Heart_GUIRezPartyRaidCheckButton:SetChecked(0)
                                                end
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIRezSay" virtual="true">
		<Size>
			<AbsDimension x="50" y="60"/>
		</Size>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="Heart_GUIRezYell" relativePoint="LEFT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentCheckButtonText" inherits="GameFontHighlightSmall" justifyH="CENTER" text="Say">
					<Size>
						<AbsDimension x="50" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="BOTTOM">
							<Offset>
								<AbsDimension x="0" y="5"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentCheckButton" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOP"/>
				</Anchors>
				<Scripts>
					<OnShow>
                                              if Heart_Config["rez_message_channel"] == "SAY" then
                                              this:SetChecked(1)
                                              else
                                              this:SetChecked(0)
                                              end
					</OnShow>
					<OnClick>
						if Heart_Config["rez_message_channel"] == "SAY" then
						   this:SetChecked(0)
                                                   Heart_Config["rez_message_channel"] = "NONE"
						else
						    this:SetChecked(1)
						    Heart_Config["rez_message_channel"] = "SAY"
                                                    Heart_GUIRezPartyRaidCheckButton:SetChecked(0)
                                                    Heart_GUIRezYellCheckButton:SetChecked(0)
                                                end
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
	<Frame name="Heart_GUIRezPartyRaid" virtual="true">
		<Size>
			<AbsDimension x="50" y="60"/>
		</Size>
				<Anchors>
					<Anchor point="LEFT" relativeTo="Heart_GUIRezYell" relativePoint="RIGHT">
						<Offset>
							<AbsDimension x="0" y="0"/>
						</Offset>
					</Anchor>
				</Anchors>
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentCheckButtonText" inherits="GameFontHighlightSmall" justifyH="CENTER" text="Party/Raid">
					<Size>
						<AbsDimension x="50" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="BOTTOM">
							<Offset>
								<AbsDimension x="0" y="5"/>
							</Offset>
						</Anchor>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentCheckButton" inherits="UICheckButtonTemplate">
				<Size>
					<AbsDimension x="24" y="24"/>
				</Size>
				<Anchors>
					<Anchor point="TOP"/>
				</Anchors>
				<Scripts>
					<OnShow>
                                              if Heart_Config["rez_message_channel"] == "RAID" then
                                              this:SetChecked(1)
                                              else
                                              this:SetChecked(0)
                                              end
					</OnShow>
                                        <OnClick>
						if Heart_Config["rez_message_channel"] == "RAID" then
						   this:SetChecked(0)
                                                   Heart_Config["rez_message_channel"] = "NONE"
						else
						    this:SetChecked(1)
						    Heart_Config["rez_message_channel"] = "RAID"
                                                    Heart_GUIRezSayCheckButton:SetChecked(0)
                                                    Heart_GUIRezYellCheckButton:SetChecked(0)
                                                end
					</OnClick>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
			</CheckButton>
		</Frames>
		<Scripts>
			<OnEnter>
				Heart_ShowTooltip()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
		</Scripts>
	</Frame>
		      </Frames>
		    </Frame>
		    <Frame name="RezClassesInset">
				<Size>
					<AbsDimension x="350" y="120"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="Heart_GUIRez" relativePoint="BOTTOM">
                                                <Offset>
						        <AbsDimension x="0" y="10"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
			<Frame name="Heart_GUIDruidPriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="10" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_druid_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Druid]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["DRUID"].r, RAID_CLASS_COLORS["DRUID"].g, RAID_CLASS_COLORS["DRUID"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["DRUID"].r, RAID_CLASS_COLORS["DRUID"].g, RAID_CLASS_COLORS["DRUID"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Druid])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIHunterPriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIDruidPriorityRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_hunter_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Hunter]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["HUNTER"].r, RAID_CLASS_COLORS["HUNTER"].g, RAID_CLASS_COLORS["HUNTER"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["HUNTER"].r, RAID_CLASS_COLORS["HUNTER"].g, RAID_CLASS_COLORS["HUNTER"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Hunter])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMagePriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIHunterPriorityRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_mage_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Mage]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["MAGE"].r, RAID_CLASS_COLORS["MAGE"].g, RAID_CLASS_COLORS["MAGE"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["MAGE"].r, RAID_CLASS_COLORS["MAGE"].g, RAID_CLASS_COLORS["MAGE"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Mage])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPaladinPriestPriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIMagePriorityRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnShow>
						if (UnitFactionGroup("player") == C_Alliance) then
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_paladin_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Paladin]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Paladin])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["PALADIN"].r, RAID_CLASS_COLORS["PALADIN"].g, RAID_CLASS_COLORS["PALADIN"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["PALADIN"].r, RAID_CLASS_COLORS["PALADIN"].g, RAID_CLASS_COLORS["PALADIN"].b)
						else
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_priest_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Priest]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Priest])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
						end
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIPriestRoguePriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="-15" y="-7"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnShow>
						if (UnitFactionGroup("player") == C_Alliance) then
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_priest_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Priest]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Priest])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["PRIEST"].r, RAID_CLASS_COLORS["PRIEST"].g, RAID_CLASS_COLORS["PRIEST"].b)
						else
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_rogue_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Rogue]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Rogue])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
						end
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIRogueShamanPriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIPriestRoguePriorityRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnShow>
						if (UnitFactionGroup("player") == C_Alliance) then
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_rogue_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Rogue]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Rogue])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["ROGUE"].r, RAID_CLASS_COLORS["ROGUE"].g, RAID_CLASS_COLORS["ROGUE"].b)
						else
							getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_shaman_priority)
							getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Shaman]"
							getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Shaman])
							getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["SHAMAN"].r, RAID_CLASS_COLORS["SHAMAN"].g, RAID_CLASS_COLORS["SHAMAN"].b)
							getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["SHAMAN"].r, RAID_CLASS_COLORS["SHAMAN"].g, RAID_CLASS_COLORS["SHAMAN"].b)
						end
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIWarlockPriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIRogueShamanPriorityRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_warlock_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Warlock]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["WARLOCK"].r, RAID_CLASS_COLORS["WARLOCK"].g, RAID_CLASS_COLORS["WARLOCK"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["WARLOCK"].r, RAID_CLASS_COLORS["WARLOCK"].g, RAID_CLASS_COLORS["WARLOCK"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Warlock])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIWarriorPriorityRez" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUIWarlockPriorityRez" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_warrior_priority)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"rez_priority\"][C_Warrior]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "SliderLow"):SetVertexColor(RAID_CLASS_COLORS["WARRIOR"].r, RAID_CLASS_COLORS["WARRIOR"].g, RAID_CLASS_COLORS["WARRIOR"].b)
						getglobal(this:GetName() .. "SliderHigh"):SetVertexColor(RAID_CLASS_COLORS["WARRIOR"].r, RAID_CLASS_COLORS["WARRIOR"].g, RAID_CLASS_COLORS["WARRIOR"].b)
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["rez_priority"][C_Warrior])
					</OnShow>
				</Scripts>
			</Frame>
		       </Frames>
		    </Frame>
		</Frames>
	</Frame>

		

	<Frame name="Heart_ClickFrame" parent="UIParent" enableMouse="true" hidden="true" movable="true" toplevel="true" frameStrata="BACKGROUND">
       <Size>
             <AbsDimension x="110" y="170" />
       </Size>
       <Anchors>
                <Anchor point="CENTER" relativeTo="UIParent" />
       </Anchors>
       <Backdrop bgFile="interface\dialogframe\ui-dialogbox-background" edgeFile="Interface\Tooltips\UI-Tooltip-Border" tile="true">
                 <BackgroundInsets>
                                   <AbsInset left="5" right="5" top="5" bottom="5" />
                 </BackgroundInsets>
                 <TileSize>
                           <AbsValue val="16" />
                 </TileSize>
                 <EdgeSize>
                           <AbsValue val="16" />
                 </EdgeSize>
       </Backdrop>
       <Layers>
               <Layer level="ARTWORK">
                               <FontString name="$parentTitle" outline ="HEAVY" inherits="GameFontNormal" text="redHeart">
                                           <Size><AbsDimension x="110" y="12"/></Size>
                                           <FontHeight>
                                                       <AbsValue val="12" />
                                           </FontHeight>
                                           <Color r="0" g="1" b="0" />
                                           <Shadow>
                                                   <Color r="0" g="0" b="0" />
                                                   <Offset>
                                                           <AbsDimension x="1" y="-1" />
                                                   </Offset>
                                           </Shadow>
                                           <Anchors>
                                                    <Anchor point="TOP" relativePoint="TOP" relativeTo="$parent">
                                                            <Offset>
                                                                    <AbsDimension x="0" y="-5" />
                                                            </Offset>
                                                    </Anchor>
                                           </Anchors>
                           
                               </FontString> 
                      
               </Layer>
       </Layers>
       <Frames>
       		  <Button name="$parentCloseButton" inherits="OptionsButtonTemplate" text="X" enableMouse="true">
                       <Size>
                             <AbsDimension x="16" y="16" />
                       </Size>
                       <Anchors>
                                <Anchor point="TOPRIGHT" relativeTo="$parent" relativePoint="TOPRIGHT">
                                        <Offset>
                                                <AbsDimension x="-5" y="-3"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
                       <Scripts>
                  					      <OnEnter>
                         		Heart_ShowTooltip()
														</OnEnter>
														<OnLeave>
														GameTooltip:Hide()
														</OnLeave>
                               <OnClick>
                                         Heart_ClickFrame:Hide()
                                </OnClick>
                       </Scripts>
				
               </Button>
       		
               <Button name="$parentClass1" hidden="true" inherits="Heart_ClassClickButtonTemplate">
                       <Anchors>
                                <Anchor point="TOP" relativeTo="$parentTitle" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="-5"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
               </Button>
               <Button name="$parentClass2" hidden="true" inherits="Heart_ClassClickButtonTemplate">
                       <Anchors>
                                <Anchor point="TOP" relativeTo="$parentClass1" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="-5"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
               </Button>
               <Button name="$parentClass3" hidden="true" inherits="Heart_ClassClickButtonTemplate">
                       <Anchors>
                                <Anchor point="TOP" relativeTo="$parentClass2" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="-5"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
               </Button>
               <Button name="$parentClass4" hidden="true" inherits="Heart_ClassClickButtonTemplate">
                       <Anchors>
                                <Anchor point="TOP" relativeTo="$parentClass3" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="-5"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
               </Button>
               <Button name="$parentClass5" hidden="true" inherits="Heart_ClassClickButtonTemplate">
                       <Anchors>
                                <Anchor point="TOP" relativeTo="$parentClass4" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="-5"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
               </Button>
               <Button name="$parentRezButton" inherits="OptionsButtonTemplate" text="Rez" enableMouse="true">
                       <Size>
                             <AbsDimension x="100" y="25" />
                       </Size>
                       <Anchors>
                                <Anchor point="BOTTOMLEFT" relativeTo="$parent" relativePoint="BOTTOMLEFT">
                                        <Offset>
                                                <AbsDimension x="5" y="125"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
                       <Scripts>
                                <OnShow>
                                        this:RegisterForClicks("LeftButtonUp", "RightButtonDown")
                                </OnShow>
                                <OnClick>
                                         Heart_RezButton_OnClick(arg1)
                                </OnClick>
                       </Scripts>
		<NormalTexture inherits="DialogButtonNormalTexture"/>
		<PushedTexture inherits="DialogButtonPushedTexture"/>
		<HighlightTexture inherits="DialogButtonHighlightTexture"/>
               </Button>

               <Button name="$parentTankButton" inherits="OptionsButtonTemplate" text="Tank" enableMouse="true">
                       <Size>
                             <AbsDimension x="48" y="25" />
                       </Size>
                       <Anchors>
                                <Anchor point="BOTTOMLEFT" relativeTo="$parent" relativePoint="BOTTOMLEFT">
                                        <Offset>
                                                <AbsDimension x="5" y="95"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
                       <Scripts>
                  					      <OnEnter>
                         		Heart_ShowTooltip()
														</OnEnter>
														<OnLeave>
														GameTooltip:Hide()
														</OnLeave>
                                <OnShow>
                                        this:RegisterForClicks("LeftButtonUp", "RightButtonDown")
                                </OnShow>
                                <OnClick>
                                         Heart_TankButton_OnClick(arg1)
                                </OnClick>
                       </Scripts>
		<NormalTexture inherits="DialogButtonNormalTexture"/>
		<PushedTexture inherits="DialogButtonPushedTexture"/>
		<HighlightTexture inherits="DialogButtonHighlightTexture"/>
               </Button>

               <Button name="$parentSetTV" inherits="OptionsButtonTemplate" text="Monitor">
                       <Size>
                             <AbsDimension x="48" y="25" />
                       </Size>
                       <Anchors>
                                <Anchor point="BOTTOMRIGHT" relativeTo="$parent" relativePoint="BOTTOMRIGHT">
                                        <Offset>
                                                <AbsDimension x="-5" y="95"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
                       <Scripts>
                                <OnClick>
                                        Heart_SetTV();
                                </OnClick>
                       </Scripts>
		<NormalTexture inherits="DialogButtonNormalTexture"/>
		<PushedTexture inherits="DialogButtonPushedTexture"/>
		<HighlightTexture inherits="DialogButtonHighlightTexture"/>
               </Button>
		<Button name="Heart_GUIProfileDropDownMenu" inherits="UIDropDownMenuTemplate">
                       <Size>
                             <AbsDimension x="100" y="25" />
                       </Size>
                       <Anchors>
                                <Anchor point="BOTTOM" relativeTo="$parent" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="2"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnShow>
						UIDropDownMenu_Initialize(this, Heart_ProfileDropDownMenuInitialize)
						UIDropDownMenu_SetSelectedID(this, 1)
						UIDropDownMenu_SetWidth(80)
						UIDropDownMenu_JustifyText("LEFT")
					</OnShow>
				</Scripts>
		</Button>
                <Button name="Heart_GUINewProfileButton" inherits="OptionsButtonTemplate" text="Save Profile">
				<Size>
					<AbsDimension x="100" y="25"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOM" relativeTo="$parent" relativePoint="BOTTOM">
						<Offset>
							<AbsDimension x="0" y="35"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnEnter>
						Heart_ShowTooltip()
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
					<OnClick>
						Heart_GUIProfileTextBox:Show()
					</OnClick>
				</Scripts>
		<NormalTexture inherits="DialogButtonNormalTexture"/>
		<PushedTexture inherits="DialogButtonPushedTexture"/>
		<HighlightTexture inherits="DialogButtonHighlightTexture"/>
			</Button>
			<Button name="Heart_GUIOptButton" inherits="OptionsButtonTemplate" text="Options">
                       <Size>
                             <AbsDimension x="100" y="25" />
                       </Size>
                       <Anchors>
                                <Anchor point="BOTTOM" relativeTo="$parent" relativePoint="BOTTOM">
                                        <Offset>
                                                <AbsDimension x="0" y="65"/>
                                        </Offset>
                                </Anchor>
                       </Anchors>
                       <Scripts>
                           <OnEnter>
                         		Heart_ShowTooltip()
														</OnEnter>
														<OnLeave>
														GameTooltip:Hide()
														</OnLeave>
                                <OnClick>
                                          Heart_GUI:Show() 
															</OnClick>
                       </Scripts>
		<NormalTexture inherits="DialogButtonNormalTexture"/>
		<PushedTexture inherits="DialogButtonPushedTexture"/>
		<HighlightTexture inherits="DialogButtonHighlightTexture"/>
               </Button>
       </Frames>
       <Scripts>
                <OnShow>
        				        Heart_UpdateScale()
                        Heart_UpdateClassButtons()
                </OnShow>
                <OnMouseUp>
                           Heart_ClickFrame:StopMovingOrSizing()
                </OnMouseUp>
                <OnMouseDown>
                             if Heart_ClickFrame:IsMovable() then
                                Heart_ClickFrame:StartMoving()
                             end
                </OnMouseDown>
       </Scripts>
</Frame>

<StatusBar name="Heart_TVBarTemplate" virtual="true" hidden="true">
		<Size>
			<AbsDimension x="192" y="14"/>
		</Size>
		<Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background"/>
				
		<Layers>
			<Layer level="OVERLAY">
				<FontString name="$parentText" inherits="GameFontDarkGraySmall" justifyH = "LEFT" text="Heart heal bar">
					<Size>
						<AbsDimension x="192" y="10"/>
					</Size>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
					<Color r="1.0" g="1.0" b="1.0"/>
				</FontString>
				<Texture name="$parentSpark" file="Interface\CastingBar\UI-CastingBar-Spark" alphaMode="ADD">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="CENTER"/>
					</Anchors>
				</Texture>
				</Layer>
				<Layer level="BACKGROUND">
    	<Texture name="$parentBarB" file="Interface\TargetingFrame\UI-StatusBar">
          <Size>
						<AbsDimension x="1" y="14"/>
					</Size>
					<Anchors>
						<Anchor point="RIGHT"/>
					</Anchors>
   	 </Texture>
			</Layer>		
			
		</Layers>
		<Scripts>
			<OnLoad>
				this:SetFrameLevel(this:GetFrameLevel() - 1)
				this:SetBackdropColor(0.7, 0.7, 0.7, 0.3)
				this:SetMinMaxValues(666, 1337)
				this:SetValue(666)
				this:SetMinMaxValues(0,1)
				getglobal(this:GetName() .. "BarTexture"):SetVertexColor(1.0, 1, 0.5, 0.3)
				getglobal(this:GetName() .. "BarB"):SetVertexColor(0.0, 1.0, 0.0, 0.7)
			</OnLoad>
		</Scripts>
		<BarTexture name="$parentBarTexture" file="Interface\TargetingFrame\UI-StatusBar"/>
			
	</StatusBar>


<Frame name="Heart_TargetViewBar" parent="UIParent" hidden="false">
		<Size>
			<AbsDimension x="200" y="90"/>
		</Size>
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Frames>
			<StatusBar name="$parent0" inherits="Heart_GUIBarTemplate" movable="true" enableMouse="true">
				<Anchors>
					<Anchors point="TOP"/>
				</Anchors>
			<Scripts>
					<OnMouseUp>
						if (this.isMoving) then
							this:StopMovingOrSizing()
							this.isMoving = false
						end
					</OnMouseUp>
					<OnMouseDown>
						if (((not this.isLocked) or (this.isLocked == 0)) and (arg1 == "LeftButton") ) then
						  if Heart_TargetView.UnitID then
						  		TargetUnit(Heart_TargetView.UnitID)
						  end
							this:StartMoving()
							this.isMoving = true
						end
					</OnMouseDown>
					<OnHide>
						if (this.isMoving) then
							this:StopMovingOrSizing()
							this.isMoving = false
						end
					</OnHide>
				</Scripts>
				</StatusBar>
			<StatusBar name="$parent1" inherits="Heart_TVBarTemplate" >
				<Anchors>
					<Anchors point="TOP" relativeTo="$parent0" relativePoint="BOTTOM"/>
				</Anchors>
				
			</StatusBar>
			<StatusBar name="$parent2" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent1" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent3" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent2" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent4" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent3" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent5" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent4" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent6" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent5" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent7" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent6" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			<StatusBar name="$parent8" inherits="Heart_TVBarTemplate">
				<Anchors>
					<Anchor point="TOP" relativeTo="$parent7" relativePoint="BOTTOM"/>
				</Anchors>
			</StatusBar>
			</Frames>
</Frame>

<Frame name="Heart_GUIAdv" parent="Heart_GUI" hidden="true">
		<Size>
			<AbsDimension x="415" y="278"/>
		</Size>
		<Anchors>
			<Anchor point="BOTTOMLEFT" relativeTo="Heart_GUITab1" relativePoint="TOPLEFT">
				<Offset>
					<AbsDimension x="0" y="-4"/>
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop name="$parentBackdrop" bgFile="Interface\AddOns\Heart\Images\dark" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<EdgeSize>
				<AbsValue val="16"/>
			</EdgeSize>
			<TileSize>
				<AbsValue val="128"/>
			</TileSize>
			<BackgroundInsets>
				<AbsInset left="5" right="5" top="5" bottom="5"/>
			</BackgroundInsets>
		</Backdrop>
		<Frames>
		    <Frame name="$parentInset1">
				<Size>
					<AbsDimension x="370" y="120"/>
				</Size>
				<Anchors>
					<Anchor point="TOPLEFT">
                                                <Offset>
						        <AbsDimension x="15" y="-7"/>
                                                </Offset>
					</Anchor>
				</Anchors>
                                <Backdrop name="$parentBackdrop" bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
                                          <EdgeSize>
                                                    <AbsValue val="16"/>
                                          </EdgeSize>
                                          <TileSize>
                                                    <AbsValue val="16"/>
                                          </TileSize>
                                          <BackgroundInsets>
                                                            <AbsInset left="5" right="5" top="5" bottom="5"/>
                                          </BackgroundInsets>
                                </Backdrop>
		       <Frames>
      			<Frame name="Heart_GUICastTimeDebuff_Value" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="5" y="-5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
					       getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_CastTime_Debuff)
									getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"CastTime_Debuff\"]"
					        getglobal(this:GetName() .. "Slider"):SetValueStep(5)
					        getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0, 500)
						
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["CastTime_Debuff"])
					</OnShow>
				</Scripts>
			</Frame>
			<Frame name="Heart_GUIMTCastTimeDebuff_Value" inherits="Heart_GUISliderTemplate2">
				<Anchors>
					<Anchor point="TOP" relativeTo="Heart_GUICastTimeDebuff_Value" relativePoint="BOTTOM"/>
				</Anchors>
				<Scripts>
					<OnLoad>
					getglobal(this:GetName() .. "Slider"):SetValueStep(10)
					        getglobal(this:GetName() .. "Slider"):SetMinMaxValues(0,1000)
						getglobal(this:GetName() .. "SliderLow"):SetText(Heart_GUI_MTCastTime_Debuff)
						getglobal(this:GetName() .. "Slider").variable = "Heart_Config[\"MTCastTime_Debuff\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "Slider"):SetValue(Heart_Config["MTCastTime_Debuff"])
					</OnShow>
				</Scripts>
			</Frame>
		      </Frames>
		    </Frame>
		<Frame name="Heart_GUIShapeshiftedDruids" inherits="Heart_GUICheckButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="Heart_GUIMTCastTimeDebuff_Value" relativePoint="BOTTOMLEFT">
					        <Offset>
					                <AbsDimension x="-7" y="-6"/>
                                                </Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						getglobal(this:GetName() .. "CheckButtonText"):SetText(Heart_GUI_shapeshifted_druids)
						getglobal(this:GetName() .. "CheckButton").variable = "Heart_Config[\"shapeshifted_druids\"]"
					</OnLoad>
					<OnShow>
						getglobal(this:GetName() .. "CheckButton"):SetChecked(Heart_Config["shapeshifted_druids"])
					</OnShow>
				</Scripts>
			</Frame>
			</Frames>
</Frame>
		

</Ui>


